# Nodes for spoofing sensor data and publishing data packets over sensor network
services:
  mock_imu:
    build: ./
    network_mode: "host"
    command: ros2 run asv_sensors mock_imu --ros-args -p ip_address:=${IP_ADDRESS} -p udp_port:=${UDP_PORT} --ros-args --log-level ${SENSOR_DRIVERS_LOG_LEVEL}

  mock_power_level:
    build: ./
    network_mode: "host"
    command: ros2 run asv_sensors mock_power_level --ros-args -p ip_address:=${IP_ADDRESS} -p udp_port:=${UDP_PORT} --ros-args --log-level ${SENSOR_DRIVERS_LOG_LEVEL}

  mock_attitude:
    build: ./
    network_mode: "host"
    command: ros2 run asv_sensors mock_attitude --ros-args -p ip_address:=${IP_ADDRESS} -p udp_port:=${UDP_PORT} --ros-args --log-level ${SENSOR_DRIVERS_LOG_LEVEL}

  mock_gps:
    build: ./
    network_mode: "host"
    command: ros2 run asv_sensors mock_gps --ros-args -p ip_address:=${IP_ADDRESS} -p udp_port:=${UDP_PORT} --ros-args --log-level ${SENSOR_DRIVERS_LOG_LEVEL}

  mock_wind:
    build: ./
    network_mode: "host"
    command: ros2 run asv_sensors mock_wind --ros-args -p ip_address:=${IP_ADDRESS} -p udp_port:=${UDP_PORT} --ros-args --log-level ${SENSOR_DRIVERS_LOG_LEVEL} 

  measurement_packet_publisher:
    build: ./
    command: ros2 run asv_sensors measurement_packet_publisher --ros-args --log-level ${SENSOR_DRIVERS_LOG_LEVEL} 
